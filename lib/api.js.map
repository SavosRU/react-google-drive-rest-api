{"version":3,"sources":["../src/api.es6"],"names":["API_DOMAIN_UPLOAD","call","GoogleDriveAPI","getAbout","query_params","success_callback","fail_callback","temp_params","Object","assign","fields","getStorage","listFile","getFile","fileId","_initResumableSession","name","type","status","data","console","error","domain","_sendFileViaResumableSessionURI","uri","file","noDefaultQueryParams","noDefaultDomain","_continueSendFileViaResumableSessionURI","importFileSimple","header","body","importFileMultipart","importFileResumable","then","response","isSuccess","location","exportFile","mimeType","responseType","deleteFile","emptyTrash"],"mappings":"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","file":"api.js","sourcesContent":["import {API_DOMAIN_UPLOAD} from './config.es6';\nimport call from './utils/call';\nexport default class GoogleDriveAPI {\n\n  /** =================================================================\n   *                    Google Drive Rest API\n   *  =================================================================*/\n\n  /**\n   * Google API calling functions, basic paramters are:\n   *  1. path params (if needed): String\n   *  2. query params (if needed): Object\n   *  3. body (if needed): Object\n   *  4. customized params (if needed): Any\n   *  5. success/fail callback: Function\n   * \n   * More details refer to: https://developers.google.com/drive/v3/reference/\n   */\n\n  static getAbout(query_params, success_callback, fail_callback) {\n    //let default_query_params = { fields: 'user' }\n    let temp_params = Object.assign({}, { fields: 'user' }, query_params)\n    return call('get', '/about', null, temp_params, null, success_callback, fail_callback);\n  }\n\n  static getStorage(query_params, success_callback, fail_callback) {\n    //let default_query_params = { fields: 'user' }\n    let temp_params = Object.assign({}, { fields: 'storageQuota' }, query_params)\n    return call('get', '/about', null, temp_params, null, success_callback, fail_callback);\n  }\n\n  static listFile(query_params, success_callback, fail_callback) {\n    return call('get', 'files', null, query_params, null, success_callback, fail_callback);\n  }\n\n  /**\n   * Gets a file's metadata or content by ID\n   */\n  static getFile(fileId) {  \n    return call('get', 'files/' + fileId +'?fields=size', null, null, null, null, null);\n  }\n\n  /**\n   * Initiating a upload session for Resumable Upload\n   * \n   * More details refer to: https://developers.google.com/drive/v3/web/resumable-upload\n   */\n  static _initResumableSession(name, type) {\n    return call('post', 'files', { 'Content-Type': 'application/json; charset=UTF-8' },\n      { 'uploadType': 'resumable' }, // query\n      { 'name': name, 'mimeType': type }, //body\n      null,\n      (status, data) => { console.error('failed in init resumable session') },// fail callback \n      { domain: API_DOMAIN_UPLOAD }\n    );\n  }\n\n  static _sendFileViaResumableSessionURI(uri, file) {\n    return call('put', uri, null, null, file, null, null, { domain: null, noDefaultQueryParams: true, noDefaultDomain: true });\n  }\n\n  static _continueSendFileViaResumableSessionURI(uri, file) {\n    return call('put', uri, null, null, file, null, null, { domain: null, noDefaultQueryParams: true, noDefaultDomain: true });\n  }\n\n  static importFileSimple(header, query_params, body, success_callback, fail_callback) {\n    return call('post', '', header, query_params, body, success_callback, fail_callback, { domain: API_DOMAIN_UPLOAD });\n  }\n\n  // TODO\n  static importFileMultipart() {\n\n  }\n\n  static importFileResumable(file, name, type) {\n    return this._initResumableSession(name, type)\n      .then((response) => {\n        //console.log('initResumableSession response:', response)\n        if (response.isSuccess) {\n          return this._sendFileViaResumableSessionURI(response.header.location, file);\n        }\n      })\n  }\n\n  static exportFile(fileId, mimeType, success_callback, fail_callback) {\n    //if(!mimeType) mimeType = 'text/html';\n    return call('get', 'files/' + fileId + '/export', null, { mimeType: mimeType }, null, success_callback, fail_callback, {responseType:'arraybuffer'})\n  }\n\n  static deleteFile(fileId, success_callback, fail_callback) {\n    return call('delete', 'files/' + fileId, null, null, null, success_callback, fail_callback);\n  }\n\n  static emptyTrash(success_callback, fail_callback) {\n    return call('delete', 'files/trash', null, null, null, success_callback, fail_callback);\n  }\n\n\n  \n}"]}